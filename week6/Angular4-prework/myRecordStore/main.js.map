{"version":3,"sources":["./src/environments/environment.ts","./src/app/cart.service.ts","./src/app/records.ts","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/product-details/product-details.component.ts","./src/app/product-details/product-details.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  items=[];\n\n  constructor() { }\n\n  addToCart(record) {\n    this.items.push(record);\n  } \n\n  getItems() {\n    return this.items;\n  }\n\n   clearCart() {\n    this.items = [];\n    return this.items;\n  }\n\n}","export const records = [\r\n    {  \r\n        artist: 'Kings of Leon',\r\n        album: 'When you see yourself',  \r\n        price: 19.99,  \r\n        genre: 'Indie',  \r\n        image: 'https://media.hitparade.ch/cover/400/kings_of_leon-when_you_see_yourself_a.jpg'\r\n    },\r\n  \r\n    {\r\n  \r\n        artist: 'AC/DC',\r\n        album: 'Power up',  \r\n        price: 18.99,  \r\n        genre: 'Hard Rock',\r\n        image: 'https://media.hitparade.ch/cover/400/acdc-power_up_a.jpg'\r\n  \r\n    },\r\n  \r\n    {\r\n  \r\n        artist: 'Drake',\r\n        album: 'Scary Hours',  \r\n        price: 18.99,  \r\n        genre: 'Rap',\r\n        image: 'https://media.hitparade.ch/cover/400/drake-scary_hours_2_a.jpg'\r\n    },\r\n\r\n    {\r\n\r\n        artist: 'Seiler & Speer',\r\n        album: 'FÃ¼r immer',\r\n        price: 28.99,  \r\n        genre: 'Austropop',\r\n        image: 'https://media.hitparade.ch/cover/400/seiler_und_speer-fuer_immer_a.jpg'\r\n\r\n\r\n    },    \r\n\r\n    {\r\n\r\n        artist: 'Nirvana',\r\n        album: 'Nevermind',  \r\n        price: 15.99,  \r\n        genre: 'Grunge',\r\n        image: 'https://media.hitparade.ch/cover/400/nirvana-nevermind_a.jpg'\r\n\r\n\r\n    }, \r\n    \r\n    {\r\n\r\n        artist: 'Lana del Rey',\r\n        album: 'Born to die',  \r\n        price: 16.99,  \r\n        genre: 'Pop',\r\n        image: 'https://media.hitparade.ch/cover/400/lana_del_rey-born_to_die_a.jpg'\r\n\r\n\r\n    } \r\n    \r\n   ];","import { Component, OnInit } from '@angular/core';\nimport { records } from '../records';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n    records = records;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Our records</h1>\n\n\n<div class=\"row row-cols-2 row-cols-md-3 g-4\">\n    <div class=\"col\" *ngFor=\"let record of records; index as recordId\">\n      <div class=\"card h-100\">\n        <a routerLink=\"records/{{recordId}}\"><img src=\"{{record.image}}\" class=\"card-img-top\" alt=\"cover\"></a>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\"><a routerLink=\"records/{{recordId}}\">{{record.album}}</a></h5>\n          <p class=\"card-text\">by {{record.artist}}</p>\n        </div>\n        <div class=\"card-footer\">\n          <small class=\"text-muted\">Last updated 3 mins ago</small>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myRecordStore';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>  ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    NavbarComponent,\n    ProductDetailsComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { FormControl, FormGroup } from '@angular/forms';\n// import { records } from '../records';\n\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  items;\n  constructor(private cartService: CartService) { }\n\n  checkoutForm = new FormGroup({\n    name: new FormControl(''),\n    address: new FormControl('')\n   });\n\n  ngOnInit(): void {\n    this.items = this.cartService.getItems();\n  }\n  onSubmit(customerData) {\n\n    // Process checkout data here\n  \n    console.warn('Your order has been submitted', customerData);  \n  \n    this.items = this.cartService.clearCart();  \n    this.checkoutForm.reset();  \n  }\n\n}\n","<div class=\"container mt-4\">\n  <h3>Cart</h3>\n\n  <table class=\"cart-item mb-3 cart-table\" *ngFor=\"let item of items\">\n      <td><img src=\"{{item.image}}\" alt=\"...\" class=\"img-thumbnail img-cart\"></td>\n      <td>{{ item.album }} </td>\n      <td>{{ item.artist }} </td>\n      <td>{{ item.price | currency }}</td>\n  </table>\n\n  <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit(checkoutForm.value)\">\n\n\n    <label for=\"fname\">First name:</label><br>\n    <input type=\"text\"><br>\n    <label for=\"lname\">Last name:</label><br>\n    <input type=\"text\"><br><br>\n    \n      <!-- <div>   \n        <label for=\"name\">   \n          Name   \n        </label>   \n        <input id=\"name\" type=\"text\" formControlName=\"name\">   \n      </div>   \n    \n      <div>   \n        <label for=\"address\">   \n          Address   \n        </label>   \n        <input id=\"address\" type=\"text\" formControlName=\"address\">   \n      </div>   \n      -->\n      <button class=\"button btn btn-secondary\" type=\"submit\">Purchase</button>   \n    \n    </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" routerLink=\"/\">MyRecordStore</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Features</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Pricing</a>\n          </li>\n        </ul>\n      </div>\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" routerLink=\"/cart\">Checkout</button>\n    </div>    \n  </nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\n\n\n\nconst routes: Routes = [\n  {\n    path:\"\", component: ProductListComponent\n  },{\n    path:\"records/:recordId\", component: ProductDetailsComponent\n  },{\n    path: 'cart', component: CartComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartService } from '../cart.service';\n\nimport { records } from '../records';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  record: any;\n  constructor(private route: ActivatedRoute, private cartService: CartService) { }\n\n  addToCart(record) {\n    window.alert('Your product has been added to the cart!');\n    this.cartService.addToCart(record);\n\n  }\n\n\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n    this.record = records[+params.get('recordId')];\n  \n    });\n  }\n\n}\n","<!-- <div class=\"container\">\n    <h2>Record details</h2>\n</div> -->\n\n\n<div *ngIf=\"record\" class=\"container\">\n\n    <h3>{{ record.album }}</h3>\n    <p>{{ record.artist }}</p>\n    <p>{{ record.genre }}</p>\n    <h4>{{ record.price | currency }}</h4>\n    <p><button (click)=\"addToCart(record)\" class=\"btn btn-outline-secondary\">Buy</button></p>\n    <img src=\"{{record.image}}\" alt=\"{{record.album}}\">\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}